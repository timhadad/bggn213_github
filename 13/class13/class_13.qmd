---
title: "Class 13"
author: "Tim"
format: pdf
---

#install.packages("BiocManager")
#BiocManager::install()
#BiocManager::install("DESeq2)


Today we will work with bulk RNAseq data from Himes el al. where airway smooth muscle (asm) cells were treated with dexamethasone (dex), a synthetic glucocorticoid steroid with anti-inflammatory effects


## Data import

```{r}
library(readr)
counts <- read.csv("airway_scaledcounts.csv", row.names=1)
metadata <-  read.csv("airway_metadata.csv")
```

```{r}
head(counts)
```

```{r}
head(metadata)
```


#How many transcripts/genes are in the `counts` objects ?
38694

```{r}
nrow(counts)
```


#Q2. How many "control" samples are there?

```{r}
control.inds <- metadata$dex == "control"
treated.inds <- metadata$dex == "treated"
```

#to count them 
```{r}
sum(metadata$dex == "control")
```


```{r}
table(metadata$dex)
```

# I want to compare "control" vs "treated"

1. Let's split the `counts` into `control.counts` and `treated.count`

```{r}
control.counts <- counts[ , control.inds]
treated.counts <- counts[ , treated.inds]
```


2. Lets calculate the mean count per gene for "control" and "treated" - thne we can compare. let's call it `control.mean` and `treated.mean`

I can use the `apply()` funciton to apply the `mean()` over the rows or columns of any data.frame. 

```{r}
control.mean <- apply(control.counts, 1, mean)
```

```{r}
treated.mean <- apply(treated.counts, 1, mean)
```


```{r}
meancounts <- data.frame(control.mean, treated.mean)
plot(meancounts)
```

```{r}
meancounts <- data.frame(control.mean, treated.mean)
plot(meancounts, log="xy")
```


we most often use log2 transforms here becasue it makes the math easier 

```{r}
log2(20/10)
```

```{r}
log2(40/10)
```

if 40/40 is 1 then log2 would be 0 which means no change 
if 40/20 is 2 then log2 would be 1 which mean doubles 1 time 

```{r}
meancounts$log2fc <- log2(meancounts$treated.mean/meancounts$control.mean)
```



```{r}
to.rm <- rowSums(meancounts[,1:2] == 0) > 0
mycounts <- meancounts[!to.rm, ]
```


```{r}
nrow(mycounts)
```

#Q. How many "down" regulated genes do we have at the common log2 fold change value of -2.. 

```{r}
sum(mycounts$log2fc < -2)
```



#Q. How many "up" at log2FC > +2
```{r}
sum(mycounts$log2fc > 2)
```


```{r}
library(DESeq2)
```


```{r}
dds <- DESeqDataSetFromMatrix(countData = counts,
                       colData = metadata,
                       design = ~dex)
```

```{r}
dds <- DESeq(dds)
res <- results(dds)
```

```{r}
head(res)
```


```{r}
plot(res$log2FoldChange, res$padj)
```

```{r}
plot(res$log2FoldChange, -log(res$padj))
abline(v=c(-2,2), col="gray")
abline(h=-log(0.005), col="gray")

```


```{r}
mycols <- rep("gray", nrow(res))
mycols[res$log2FoldChange > 2] <- "red"
mycols[res$log2FoldChange < -2] <- "red"
mycols[res$padj > 0.005] <- "gray"

plot(res$log2FoldChange, -log(res$padj), col = mycols)
abline(v=c(-2,2), col="gray")
abline(h=-log(0.005), col="gray")
```

```{r}
write.csv(res, file="myresults.csv")
```


## Gene annotation 
to know the names of the genes from online 

```{r}
library("AnnotationDbi")
library("org.Hs.eg.db")
```

```{r}
columns(org.Hs.eg.db)
```


```{r}
res$symobol <- mapIds(org.Hs.eg.db,
        keys=row.names(res), 
        keytype="ENSEMBL",
        column="SYMBOL",
        multiVals="first")
```


```{r}
head(res)
```

```{r}
library("pathview")
library("gage")
library("gageData")
```

```{r}
data(kegg.sets.hs)
head(kegg.sets.hs, 2)
```


I need to speak ENTREZID so I can check KEGG pathway overlap as KEGG uses ENTREZ format IDs

```{r}
res$entrez <- mapIds(org.Hs.eg.db,
        keys=row.names(res), 
        keytype="ENSEMBL",
        column="ENTREZID",
        multiVals="first")
```

I can use the **gage** function to check 

```{r}
foldchanges <- res$log2FoldChange 
names(foldchanges) <- res$entrez
head(foldchanges)
```


```{r}
keggres = gage(foldchanges, gsets=kegg.sets.hs)
```

```{r}
attributes(keggres)
```

```{r}
head(keggres$less, 3)
```


```{r}
pathview(gene.data=foldchanges, pathway.id= "hsa05310")
```



![A pathway figure](hsa05310.pathview.png)


